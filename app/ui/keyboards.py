# -*- coding: utf-8 -*-
# app/ui/keyboards.py
from __future__ import annotations
from typing import List, Iterable, Tuple
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)

# ---------- –ö–ê–ú–ü–ê–ù–ò–ò ----------
def campaigns_kb(items: Iterable[Tuple[str, str]]) -> InlineKeyboardMarkup:
    rows = [[InlineKeyboardButton(text=f"üìú {title}", callback_data=f"camp:{cid}")]
            for cid, title in items]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def campaign_confirm_kb(campaign_id: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"campok:{campaign_id}"),
            InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è",   callback_data="campback"),
        ]]
    )

# ---------- –ü–û–õ / –ö–õ–ê–°–°–´ ----------
def gender_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="üë© –ñ–µ–Ω—â–∏–Ω–∞", callback_data="gender_female"),
            InlineKeyboardButton(text="üë® –ú—É–∂—á–∏–Ω–∞",  callback_data="gender_male"),
        ]]
    )

def classes_kb() -> InlineKeyboardMarkup:
    rows = [
        [
            InlineKeyboardButton(text="üó°Ô∏è –ú–µ—á–Ω–∏–∫",   callback_data="class_pick_swordsman"),
            InlineKeyboardButton(text="üîÆ –ú–∞–≥",      callback_data="class_pick_mage"),
            InlineKeyboardButton(text="üóùÔ∏è –í–æ—Ä",      callback_data="class_pick_thief"),
        ],
        [
            InlineKeyboardButton(text="‚ú® –ü–æ—Å–ª—É—à–Ω–∏–∫", callback_data="class_pick_acolyte"),
            InlineKeyboardButton(text="üèπ –õ—É—á–Ω–∏–∫",    callback_data="class_pick_archer"),
            InlineKeyboardButton(text="üßæ –¢–æ—Ä–≥–æ–≤–µ—Ü",  callback_data="class_pick_merchant"),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def confirm_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_class"),
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",       callback_data="cancel_class"),
        ]]
    )

# ---------- –ì–û–†–û–î (reply) ----------
def city_menu_kb() -> ReplyKeyboardMarkup:
    rows = [
        [KeyboardButton(text="üõí –†—ã–Ω–æ–∫"),     KeyboardButton(text="üï≥Ô∏è –ü–æ–¥–∑–µ–º–µ–ª—å—è")],
        [KeyboardButton(text="üç∫ –¢–∞–≤–µ—Ä–Ω–∞"),   KeyboardButton(text="üßç –ü–µ—Ä—Å–æ–Ω–∞–∂")],
        [KeyboardButton(text="üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"), KeyboardButton(text="üßæ –ó–∞–¥–∞–Ω–∏—è")],
        [KeyboardButton(text="üìú –°—é–∂–µ—Ç")],
    ]
    return ReplyKeyboardMarkup(
        keyboard=rows,
        resize_keyboard=True,
        input_field_placeholder="‚Ä¶"
    )

# (–Ω–∞ –±—É–¥—É—â–µ–µ)
def skills_pick_kb(keys: List[str]) -> InlineKeyboardMarkup:
    rows, row = [], []
    for i, _ in enumerate(keys, start=1):
        row.append(InlineKeyboardButton(text=str(i), callback_data=f"sk_{i}"))
        if len(row) == 4:
            rows.append(row); row = []
    if row:
        rows.append(row)
    rows.append([InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="cmb_back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)
