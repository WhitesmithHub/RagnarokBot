# -*- coding: utf-8 -*-
# app/features/city.py
from __future__ import annotations

from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext

from ..core.storage import get_player, save_player
from ..ui.keyboards import city_menu_kb, back_to_city_kb

router = Router()

@router.message(F.text == "üèòÔ∏è –í –≥–æ—Ä–æ–¥")
async def back_to_city(message: types.Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–æ—Ä–æ–¥"""
    await state.clear()
    player = get_player(message.from_user.id)
    
    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return
    
    await message.answer(
        f"üèòÔ∏è <b>{player.name}</b> –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –≥–æ—Ä–æ–¥.\n\n"
        f"üí∞ –ó–æ–ª–æ—Ç–æ: <b>{player.gold}</b>\n"
        f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: <b>{player.hp}/{player.max_hp}</b>\n"
        f"‚≠ê –£—Ä–æ–≤–µ–Ω—å: <b>{player.level}</b>\n\n"
        f"–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
        reply_markup=city_menu_kb()
    )

@router.message(F.text.in_(["üõí –†—ã–Ω–æ–∫", "üï≥Ô∏è –ü–æ–¥–∑–µ–º–µ–ª—å—è", "üç∫ –¢–∞–≤–µ—Ä–Ω–∞", "üßç –ü–µ—Ä—Å–æ–Ω–∞–∂", "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"]))
async def city_navigation(message: types.Message):
    """–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≥–æ—Ä–æ–¥—É"""
    player = get_player(message.from_user.id)
    
    if not player:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return
    
    text = message.text
    
    if text == "üõí –†—ã–Ω–æ–∫":
        await message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ä—ã–Ω–æ–∫...", reply_markup=back_to_city_kb())
    elif text == "üï≥Ô∏è –ü–æ–¥–∑–µ–º–µ–ª—å—è":
        await message.answer("–í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥–∑–µ–º–µ–ª—å–µ...", reply_markup=back_to_city_kb())
    elif text == "üç∫ –¢–∞–≤–µ—Ä–Ω–∞":
        await message.answer("–ò–¥–µ–º –≤ —Ç–∞–≤–µ—Ä–Ω—É...", reply_markup=back_to_city_kb())
    elif text == "üßç –ü–µ—Ä—Å–æ–Ω–∞–∂":
        await message.answer("–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...", reply_markup=back_to_city_kb())
    elif text == "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å":
        await message.answer("–û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å...", reply_markup=back_to_city_kb())